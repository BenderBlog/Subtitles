[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.709
PlayResX: 1920
PlayResY: 1080


[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Comments,文泉驿等宽微米黑,55,&H0000FFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,8,10,10,35,1
Style: Chinese,文泉驿等宽微米黑,70,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: English,Comic Sans MS,55,&H0000FFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:04.88,0:00:10.64,English,,0,0,0,,Greetings, and today is one of those LGR things where we don’t ask “why,” but instead ask  
Dialogue: 0,0:00:10.64,0:00:16.32,English,,0,0,0,,“why not.” Cuz we’re gonna be loading a PC game from quarter-inch reel to reel audio tape,  
Dialogue: 0,0:00:16.32,0:00:22.64,English,,0,0,0,,simply for fun because we can. All we’ll need is a tape recorder, some blank tape, a suitable  
Dialogue: 0,0:00:22.64,0:00:29.84,English,,0,0,0,,audio cable, and a computer capable of playing and recording 8-bit PCM audio in mono at 22 kilohertz.  
Dialogue: 0,0:00:30.48,0:00:35.20,English,,0,0,0,,Now, obviously there’s no practical reason to do this, and if you’re familiar with 1980s  
Dialogue: 0,0:00:35.20,0:00:40.88,English,,0,0,0,,microcomputers then you already know they can load programs from tape. Being a cheaper alternative  
Dialogue: 0,0:00:40.88,0:00:45.84,English,,0,0,0,,to floppy disks, dozens of classic computers were designed to use audio cassette tapes as  
Dialogue: 0,0:00:45.84,0:00:51.60,English,,0,0,0,,their primary method of loading and saving data. Even the original IBM PC had a cassette port,  
Dialogue: 0,0:00:51.60,0:00:57.28,English,,0,0,0,,so loading personal computer software from cassette is nothing new. Or even vinyl, there have  
Dialogue: 0,0:00:57.28,0:01:03.52,English,,0,0,0,,been a number of flexi disc and other records released containing KCS-encoded data in audio  
Dialogue: 0,0:01:03.52,0:01:11.20,English,,0,0,0,,form. But using reel to reel tape? Now that’s even more exciting, being a costlier enthusiast  
Dialogue: 0,0:01:11.20,0:01:17.20,English,,0,0,0,,format that no home computer user would bother wasting for data storage back in the day. Business  
Dialogue: 0,0:01:17.20,0:01:23.84,English,,0,0,0,,and government mainframes, sure, those often used tape drives with reels housing half inch tape. But  
Dialogue: 0,0:01:23.84,0:01:30.16,English,,0,0,0,,the way those wrote data isn’t quite what we’re doing today, despite some aesthetic similarities.  
Dialogue: 0,0:01:30.16,0:01:35.44,English,,0,0,0,,Instead we’re gonna be recording and retrieving data using a variant of the Kansas City Standard.  
Dialogue: 0,0:01:35.44,0:01:40.16,English,,0,0,0,,Also known as Byte Standard, KCS was a recording method designed for early personal  
Dialogue: 0,0:01:40.16,0:01:45.60,English,,0,0,0,,computers to store data on compact cassette tapes, a standard first introduced in 1975.
Dialogue: 0,0:01:46.16,0:01:52.64,English,,0,0,0,,Speaking of 1975, that’s also when this tape deck was made! This is a Tandberg 10XD,  
Dialogue: 0,0:01:52.64,0:01:58.32,English,,0,0,0,,which I’m using not only because it’s also from 1975, but also because it’s a machine that can  
Dialogue: 0,0:01:58.32,0:02:04.80,English,,0,0,0,,record to 10.5-inch reels at a transport speed of 15 inches per second. So it looks great on  
Dialogue: 0,0:02:04.80,0:02:10.80,English,,0,0,0,,camera with those huge metal reels, and it’ll sound great too, with 15 ips being way better  
Dialogue: 0,0:02:10.80,0:02:16.56,English,,0,0,0,,than the Kansas City Standard was ever intended to use. For reference, typical cassette tapes have a  
Dialogue: 0,0:02:16.56,0:02:24.08,English,,0,0,0,,transport speed of just 1⅞ inches per second, so having 15 ips at our disposal should be fantastic  
Dialogue: 0,0:02:24.08,0:02:30.88,English,,0,0,0,,for reliable data storage. On that note, the media I’m using is a brand new 2500ft reel of Recording  
Dialogue: 0,0:02:30.88,0:02:38.96,English,,0,0,0,,the Masters SM911 quarter-inch tape. It’s a nice 1.97 mil, high output, low noise tape that sounds  
Dialogue: 0,0:02:38.96,0:02:44.32,English,,0,0,0,,excellent with music and sound recordings, so it should be absolute overkill for storing data.  
Dialogue: 0,0:02:45.20,0:02:49.68,English,,0,0,0,,Just gotta string it through the tape path and get it queued up here, and we’re pretty much ready  
Dialogue: 0,0:02:49.68,0:02:55.12,English,,0,0,0,,to go on the tape side of things. On the computer side, I’m going with the LGR Megaluminum Monster,  
Dialogue: 0,0:02:55.12,0:03:01.76,English,,0,0,0,,which is a Windows 98 PC with a 1 gigahertz Pentium III and 512 megs of RAM. See my build  
Dialogue: 0,0:03:01.76,0:03:06.88,English,,0,0,0,,video for more details on that, but the main thing that matters is the sound card. And I’ve  
Dialogue: 0,0:03:06.88,0:03:12.64,English,,0,0,0,,got a couple of them installed here, but for this project I’m using the Creative Sound Blaster AWE64  
Dialogue: 0,0:03:12.64,0:03:19.20,English,,0,0,0,,Gold. The RCA output plugs directly into the reel to reel’s line in, and output of the reel to reel  
Dialogue: 0,0:03:19.20,0:03:24.48,English,,0,0,0,,goes to the line in on the sound card. With a quick stop in the middle to plug in some speakers  
Dialogue: 0,0:03:24.48,0:03:28.96,English,,0,0,0,,so we can actually hear what we’re doing. And by the way, magnetic weirdness is always  
Dialogue: 0,0:03:28.96,0:03:33.68,English,,0,0,0,,a concern with tape, but what’s going on here is fine. Those little speakers are magnetically  
Dialogue: 0,0:03:33.68,0:03:39.36,English,,0,0,0,,shielded and I don’t have the reel to reel right up against them or the monitor anyway, so yeah.  
Dialogue: 0,0:03:39.36,0:03:44.56,English,,0,0,0,,The bigger concern is getting a clean audio signal between the computer and the reel to reel,  
Dialogue: 0,0:03:44.56,0:03:51.28,English,,0,0,0,,and my biggest worry was that the AWE64’s line in recording might be too noisy. The only way to  
Dialogue: 0,0:03:51.28,0:03:58.32,English,,0,0,0,,know for sure is to give it a test, so let’s hop into a DOS prompt and run KCS08. This is a program  
Dialogue: 0,0:03:58.32,0:04:02.88,English,,0,0,0,,that handles Kansas City Standard cassette recordings, where you can take any file and  
Dialogue: 0,0:04:02.88,0:04:09.44,English,,0,0,0,,encode it as audio, and also decode KCS audio and convert it to data. Even though it was designed  
Dialogue: 0,0:04:09.44,0:04:14.48,English,,0,0,0,,for cassette tapes, there’s no reason it shouldn’t work on reel to reel. Just as a quick test though,  
Dialogue: 0,0:04:14.48,0:04:21.27,English,,0,0,0,,I typed up a small document in MS-DOS Edit and saved it as a TXT file. Then it’s onto KCS08,  
Dialogue: 0,0:04:21.27,0:04:26.76,English,,0,0,0,,with the command for encoding being “KCS -U -M -Y”.
Dialogue: 0,0:04:27.14,0:04:31.37,English,,0,0,0,,This makes a WAV file, ignores errors, and enables 1200 baud mode.
Dialogue: 0,0:04:31.37,0:04:36.24,English,,0,0,0,,KCS normally encodes at 300 baud, or 300 bits per second, but that results  
Dialogue: 0,0:04:36.24,0:04:42.88,English,,0,0,0,,in recordings four times as long, so, screw that. And yep, that’s it! We’ve now got a WAV  
Dialogue: 0,0:04:42.88,0:04:49.85,English,,0,0,0,,file that’s eleven seconds long storing our test text file in audio form, which sounds like this.  
Dialogue: 0,0:04:53.37,0:04:55.68,English,,0,0,0,,This works in a similar way to serial modems,
Dialogue: 0,0:04:55.68,0:05:02.64,English,,0,0,0,,where each binary bit of information is stored using audio frequency shift keying, or AFSK.  
Dialogue: 0,0:05:02.64,0:05:08.48,English,,0,0,0,,Basically lots of 1s and 0s represented by really short sine wave cycles in quick succession.  
Dialogue: 0,0:05:08.48,0:05:14.40,English,,0,0,0,,And now we can play it back and record it to tape. Cool Edit 96 is my audio program of choice here,  
Dialogue: 0,0:05:14.40,0:05:18.40,English,,0,0,0,,since I’ve used it for decades and I know it does exactly what I need. You could just as  
Dialogue: 0,0:05:18.40,0:05:23.20,English,,0,0,0,,easily use a DOS audio program and do this whole process on an even older computer if you wanted,  
Dialogue: 0,0:05:23.20,0:05:28.48,English,,0,0,0,,but I’ve got Windows 98 on here so why not. Just gotta make sure it’s playing back as  
Dialogue: 0,0:05:28.48,0:05:33.28,English,,0,0,0,,loud as possible on the computer side, and not completely blowing things out on the tape side.  
Dialogue: 0,0:05:34.00,0:05:37.84,English,,0,0,0,,I’m also not using any noise reduction, we’re simply goin’ in raw.  
Dialogue: 0,0:05:38.64,0:05:42.59,English,,0,0,0,,After a couple of volume checks, it’s time to record some data!
Dialogue: 0,0:05:47.92,0:05:54.08,English,,0,0,0,,Sweet! We now have a file on tape, and getting it back on the PC is as simple as re-recording our  
Dialogue: 0,0:05:54.08,0:06:01.92,English,,0,0,0,,recording with the same parameters KCS expects. Which is an 8-bit WAV file in mono at 22kHz. This  
Dialogue: 0,0:06:01.92,0:06:07.52,English,,0,0,0,,version of Cool Edit isn’t set to display the waveform as it’s recording, but once it’s done,  
Dialogue: 0,0:06:07.52,0:06:14.00,English,,0,0,0,,there we go! We’ve got a recording of a recorded recording. Nice. Just gonna trim the file to  
Dialogue: 0,0:06:14.00,0:06:20.64,English,,0,0,0,,remove the sections without audio, save that, go back to KCS, and now we can decode it back  
Dialogue: 0,0:06:20.64,0:06:27.20,English,,0,0,0,,to a text file. The command is about the same but in reverse, going from WAV to TXT. Didn’t  
Dialogue: 0,0:06:27.20,0:06:34.08,English,,0,0,0,,get any decode errors, so that’s promising. And would ya look at that? A text file saved in DOS,  
Dialogue: 0,0:06:34.08,0:06:40.72,English,,0,0,0,,recorded to tape, played back, and loaded back in DOS again! The only bit of weirdness is this  
Dialogue: 0,0:06:40.72,0:06:45.36,English,,0,0,0,,random block at the beginning of the text file, that wasn’t there before. I went back  
Dialogue: 0,0:06:45.36,0:06:48.80,English,,0,0,0,,and re-trimmed the recording and adjusted the volume a bit to see if that made a difference,  
Dialogue: 0,0:06:48.80,0:06:53.92,English,,0,0,0,,but nope. Still got a random block of text at the beginning of the file either way. I’m not sure  
Dialogue: 0,0:06:53.92,0:06:59.12,English,,0,0,0,,what that’s about, or what it means for storing a whole program. Only one way to find out though,  
Dialogue: 0,0:06:59.12,0:07:05.76,English,,0,0,0,,so let’s go back, rewind to a good spot, and record a full PC game on reel to reel tape!
Dialogue: 0,0:07:15.70,0:07:21.92,English,,0,0,0,,So, my immediate choice for a game to record was Doom. Because of course, who wouldn’t wanna load  
Dialogue: 0,0:07:21.92,0:07:28.88,English,,0,0,0,,Doom from a big ol’ 10-inch tape machine? Problem is, encoding Doom to KCS results in a ridiculous  
Dialogue: 0,0:07:28.88,0:07:35.76,English,,0,0,0,,5 hour, 24 minute WAV file, even at the faster 1200 baud. And that’s the two megabyte  
Dialogue: 0,0:07:35.76,0:07:41.04,English,,0,0,0,,compressed shareware version of Doom, not even the full game, so both are outta the question.  
Dialogue: 0,0:07:41.68,0:07:47.44,English,,0,0,0,,Even if we weren’t recording at 15 inches per second and went all the way down to 3 ¾, that’d  
Dialogue: 0,0:07:47.44,0:07:55.20,English,,0,0,0,,still only get us around 133 minutes per direction on our 2500ft reel. So we’ve gotta think smaller,  
Dialogue: 0,0:07:55.20,0:08:00.96,English,,0,0,0,,way smaller, in terms of game size. And because I don’t wanna be here all week I’ve chosen to encode  
Dialogue: 0,0:08:00.96,0:08:07.84,English,,0,0,0,,Kingdom of Kroz by Apogee Software. For one, it’s only 52.4 kilobytes, and for two,  
Dialogue: 0,0:08:07.84,0:08:11.92,English,,0,0,0,,the entire game is packed into a single executable. I didn’t wanna record multiple  
Dialogue: 0,0:08:11.92,0:08:17.44,English,,0,0,0,,files or compress things into a ZIP if I could help it, so this works nicely. And using the  
Dialogue: 0,0:08:17.44,0:08:25.60,English,,0,0,0,,same KCS settings as earlier, our 52K game has resulted in an 8 minute, 12 second WAV file. Heh,  
Dialogue: 0,0:08:25.60,0:08:32.79,English,,0,0,0,,yeah. 53,707 bytes loading at 1200 bits per second, whatcha gonna do? And for ease of use  
Dialogue: 0,0:08:32.79,0:08:38.07,English,,0,0,0,,I made some batch files to make the encoding and decoding a one-click process under Windows  
Dialogue: 0,0:08:38.08,0:08:43.67,English,,0,0,0,,Explorer. And yeah, at this point it’s just the same thing we did earlier, but 8 minutes longer  
Dialogue: 0,0:08:43.67,0:08:49.12,English,,0,0,0,,each way! Again, I really wasn’t sure how well this would work since 8 minutes is plenty of  
Dialogue: 0,0:08:49.12,0:08:54.80,English,,0,0,0,,time for errors to crop up, either introduced on the PC side of things or the reel to reel side.  
Dialogue: 0,0:08:54.80,0:09:00.32,English,,0,0,0,,I mean, Windows 98 PCs and Creative Sound Blasters aren’t exactly known for their noise-free audio,  
Dialogue: 0,0:09:00.32,0:09:06.16,English,,0,0,0,,and the Tandberg 10XD may be in good shape but it’s still 46 years old so you just never know.  
Dialogue: 0,0:09:06.72,0:09:12.80,English,,0,0,0,,That being said, the recording process went just fine so all that’s left to do now is to rewind it,  
Dialogue: 0,0:09:12.80,0:09:19.44,English,,0,0,0,,record it back to the PC, and see how it goes! I adjusted the input volume beforehand this time  
Dialogue: 0,0:09:19.44,0:09:24.64,English,,0,0,0,,so the resulting WAV file was maxed out, making it look even more similar to the original output  
Dialogue: 0,0:09:24.64,0:09:30.64,English,,0,0,0,,from KCS. Now for the decoding, which only takes a couple seconds thankfully. And check it  
Dialogue: 0,0:09:30.64,0:09:39.84,English,,0,0,0,,out! 53,708 bytes decoded with 1 decode error. If you’ll remember, the original Kroz file was 53,707  
Dialogue: 0,0:09:39.84,0:09:46.00,English,,0,0,0,,bytes, so we’ve picked up a stowaway somewhere along the line. But whatever let’s run it anyway.  
Dialogue: 0,0:09:47.54,0:09:49.13,English,,0,0,0,,-Oh my goodness.
Dialogue: 0,0:09:49.74,0:09:53.28,English,,0,0,0,,Aha man, it worked! Despite the extra byte latched
Dialogue: 0,0:09:53.28,0:09:57.60,English,,0,0,0,,on somewhere, I can’t see anything wrong with the game at all. I assume that there’s  
Dialogue: 0,0:09:57.60,0:10:01.52,English,,0,0,0,,something similar going on to the text file we tested, where there's just an additional  
Dialogue: 0,0:10:01.52,0:10:06.08,English,,0,0,0,,weird character tossed in there somewhere. And like, I can’t imagine that’s a good thing right?  
Dialogue: 0,0:10:06.08,0:10:11.44,English,,0,0,0,,But it certainly doesn’t seem to have affected the game at all. It runs, plays, looks, and sounds  
Dialogue: 0,0:10:11.44,0:10:19.04,English,,0,0,0,,as it should. [chuckles] Fantastic stuff. PC games on reel to reel tape, what in the world.  
Dialogue: 0,0:10:20.40,0:10:27.44,English,,0,0,0,,Granted, at this speed the maximum size we could fit is only 230 kilobytes per direction, at least  
Dialogue: 0,0:10:27.44,0:10:34.24,English,,0,0,0,,at a tape speed of 15 ips. Now obviously you can store more data at slower speeds and use longer  
Dialogue: 0,0:10:34.24,0:10:40.48,English,,0,0,0,,tapes, but it’d be supremely cumbersome, with more room for error and truly ridiculous loading times.  
Dialogue: 0,0:10:41.04,0:10:46.00,English,,0,0,0,,And you could also use a terminal program instead of KCS08 and load data more directly from  
Dialogue: 0,0:10:46.00,0:10:50.48,English,,0,0,0,,tape instead of converting recordings back and forth. And there’s nothing stopping you from  
Dialogue: 0,0:10:50.48,0:10:55.76,English,,0,0,0,,doing all this on a modern system either, it’s all just binary data moving over audio cables,  
Dialogue: 0,0:10:55.76,0:11:01.76,English,,0,0,0,,so as long as you’ve got some way to convert from one to the other then hey, go wild. But that’s  
Dialogue: 0,0:11:01.76,0:11:07.52,English,,0,0,0,,starting to enter the areas of practicality and halfway reasonable usage. And suffice it to say  
Dialogue: 0,0:11:07.52,0:11:13.04,English,,0,0,0,,but this video was by no means intended to show anything practical or reasonable. This was simply  
Dialogue: 0,0:11:13.04,0:11:18.72,English,,0,0,0,,an LGR thing for a bit of fun, and one example of something that can be done with old data storage  
Dialogue: 0,0:11:18.72,0:11:25.20,English,,0,0,0,,standards using equally old tape recorders. Making PC game tapes is admittedly not why I got into  
Dialogue: 0,0:11:25.20,0:11:30.40,English,,0,0,0,,reel to reel equipment after all. It’s much more about playing back hours of high quality analog  
Dialogue: 0,0:11:30.40,0:11:35.60,English,,0,0,0,,music on tape and experimenting with multitrack recording and all that stuff. So I’m gonna go  
Dialogue: 0,0:11:35.60,0:11:40.00,English,,0,0,0,,ahead and hook it back up to the main stereo now. But I hope that you enjoyed seeing this bit of  
Dialogue: 0,0:11:40.00,0:11:45.44,English,,0,0,0,,computery silliness anyway. And perhaps give it a try if you’ve got an old tape deck lying around,  
Dialogue: 0,0:11:45.44,0:11:50.08,English,,0,0,0,,reel to reel or otherwise. For the time being, I can think of no better way to  
Dialogue: 0,0:11:50.08,0:11:55.84,English,,0,0,0,,end this than leaving you with a direct 15 ips reel to reel recording of canyon.mid.
Dialogue: 0,0:00:04.88,0:00:10.64,Chinese,,0,0,0,,大家好，本期LGR视频，我们不讲原理知识，而是尝试些奇怪的东西
Dialogue: 0,0:00:10.64,0:00:16.32,Chinese,,0,0,0,,本期视频，我们将从0.25英寸的开盘带上加载电脑游戏
Dialogue: 0,0:00:16.32,0:00:22.64,Chinese,,0,0,0,,这纯粹是做着玩啦。只需一个录音机，一些空白磁带，一根合适的
Dialogue: 0,0:00:22.64,0:00:29.84,Chinese,,0,0,0,,内录线，还有一台能录制播放22kHz，8位单声道PCM音频的电脑
Dialogue: 0,0:00:30.48,0:00:35.20,Chinese,,0,0,0,,当然，现在这么做并没有什么意义，但如果你对上世纪80年代的
Dialogue: 0,0:00:35.20,0:00:40.88,Chinese,,0,0,0,,微型计算机有所了解的话，那你对从磁带上加载软件这件事就不陌生了
Dialogue: 0,0:00:35.20,0:00:40.88,Comments,,0,0,0,,注：此处的“微型计算机”指的是上世纪70年代生产的个人电脑。\N相对于当时的大型机，体积小多了。例如Commodore 64，小霸王之类的。
Dialogue: 0,0:00:40.88,0:00:45.84,Chinese,,0,0,0,,由于这样加载软件比软盘便宜，当时有很多电脑将从磁带加载软件当作
Dialogue: 0,0:00:45.84,0:00:51.60,Chinese,,0,0,0,,加载或保存软件的首要方式，甚至于原版的IBM电脑都有一个磁带接口
Dialogue: 0,0:00:51.60,0:00:57.28,Chinese,,0,0,0,,所以说，从磁带加载软件并不是什么新鲜事。甚至黑胶唱片也可以呢
Dialogue: 0,0:00:57.28,0:01:03.52,Chinese,,0,0,0,,当时有很多的软件被用KCS编码转变成声音，然后录在
Dialogue: 0,0:01:03.52,0:01:11.20,Chinese,,0,0,0,,软唱片之类的介质上。但要用开盘带的话，就更有意思了
Dialogue: 0,0:01:11.20,0:01:17.20,Chinese,,0,0,0,,这玩意可贵了，在当时没有任何家用电脑用这个介质存数据
Dialogue: 0,0:01:17.20,0:01:23.84,Chinese,,0,0,0,,不过政商界用的大型机常使用盘式录音机，上面挂的是半英寸的开盘带
Dialogue: 0,0:01:23.84,0:01:30.16,Chinese,,0,0,0,,尽管方式有相同之处，不过这回我不介绍往磁带写数据的原理了
Dialogue: 0,0:01:30.16,0:01:35.44,Chinese,,0,0,0,,这里，我们要用一种变种标准，KCS标准来处理数据
Dialogue: 0,0:01:35.44,0:01:40.16,Chinese,,0,0,0,,KCS标准也称Byte标准，于1975年发布
Dialogue: 0,0:01:40.16,0:01:45.60,Chinese,,0,0,0,,用来在早期个人电脑上，将数据录制到磁带上
Dialogue: 0,0:01:46.16,0:01:52.64,Chinese,,0,0,0,,说到1975年，我有一台当年生产的开盘机，这就是Tandberg 10XD
Dialogue: 0,0:01:52.64,0:01:58.32,Chinese,,0,0,0,,我要用这台机器进行实验，不仅仅是因为这是1975年生产的
Dialogue: 0,0:01:58.32,0:02:04.80,Chinese,,0,0,0,,而且这可以以15英寸每秒的速度，将声音录到半径10.5英寸的开盘带上
Dialogue: 0,0:02:04.80,0:02:10.80,Chinese,,0,0,0,,这样在摄像机上，超大的金属圆盘看上去很耐人，而且
Dialogue: 0,0:02:10.80,0:02:16.56,Chinese,,0,0,0,,15英寸每秒的录制速度已经超过KCS标准要求了。按照标准，
Dialogue: 0,0:02:16.56,0:02:24.08,Chinese,,0,0,0,,普通的磁带转速为1.875英寸每秒，所以用15英寸每秒的转速
Dialogue: 0,0:02:24.08,0:02:30.88,Chinese,,0,0,0,,存数据就更好了。在这点上，我要用一个2500英尺长的
Dialogue: 0,0:02:30.88,0:02:38.96,Chinese,,0,0,0,,全新四分之一英寸宽的磁带，厚度0.05mm，底噪很小，输出很强
Dialogue: 0,0:02:30.88,0:02:38.96,Comments,,0,0,0,,注：mil是长度单位，1mil=0.0254mm
Dialogue: 0,0:02:38.96,0:02:44.32,Chinese,,0,0,0,,特别适合用来播放音乐和录音，所以用来存数据的话，完全是大材小用
Dialogue: 0,0:02:45.20,0:02:49.68,Chinese,,0,0,0,,只需将磁带固定于此，并穿过下面，就差不多OK了
Dialogue: 0,0:02:49.68,0:02:55.12,Chinese,,0,0,0,,在电脑方面，我要用这台LGR大块头机器
Dialogue: 0,0:02:55.12,0:03:01.76,Chinese,,0,0,0,,预装Windows 98，内置1Ghz奔腾III处理器和512M内存
Dialogue: 0,0:02:49.68,0:03:06.88,Comments,,0,0,0,,注：BV1E7411h7o5  Megaluminum Monster评测 @ LGR & wu_dl
Dialogue: 0,0:03:01.76,0:03:06.88,Chinese,,0,0,0,,想看的话看上方注释，但这回更重要的是声卡
Dialogue: 0,0:03:06.88,0:03:12.64,Chinese,,0,0,0,,我这台电脑装了两张声卡，这里我要用创新的声卡
Dialogue: 0,0:03:12.64,0:03:19.20,Chinese,,0,0,0,,莲花头一端接入开盘机输入接口，另一端接到声卡的
Dialogue: 0,0:03:19.20,0:03:24.48,Chinese,,0,0,0,,输出接口，在中间串联一个扬声器
Dialogue: 0,0:03:24.48,0:03:28.96,Chinese,,0,0,0,,这样我们就可以监听了。还有，对于磁带来说
Dialogue: 0,0:03:28.96,0:03:33.68,Chinese,,0,0,0,,磁铁是需要注意的，但是这回还行，扬声器里面已经给
Dialogue: 0,0:03:33.68,0:03:39.36,Chinese,,0,0,0,,磁屏蔽了，我也没有将开盘机正放在扬声器或是大屁股前面
Dialogue: 0,0:03:39.36,0:03:44.56,Chinese,,0,0,0,,在这个过程中，最应该注意的是如何传输干净的声音信号
Dialogue: 0,0:03:44.56,0:03:51.28,Chinese,,0,0,0,,我最担心的是声卡的声音输出可能杂音很大
Dialogue: 0,0:03:51.28,0:03:58.32,Chinese,,0,0,0,,所以我要测试一下。我现在要在DOS命令行下运行KCS08
Dialogue: 0,0:03:58.32,0:04:02.88,Chinese,,0,0,0,,这个程序可以将数据用KCS标准编码成声音
Dialogue: 0,0:04:02.88,0:04:09.44,Chinese,,0,0,0,,当然，也可以将KCS标准处理过的声音解码成数据
Dialogue: 0,0:04:09.44,0:04:14.48,Chinese,,0,0,0,,尽管这是为磁带设计的，但在开盘机上也能工作，现在简单测试一下
Dialogue: 0,0:04:14.48,0:04:21.27,Chinese,,0,0,0,,我在MS-DOS Edit编辑器下写了一个TXT文档，然后使用KCSO8软件
Dialogue: 0,0:04:21.27,0:04:26.76,Chinese,,0,0,0,,输入如图命令  {\s1}（翻译Syu去了）{\s0}
Dialogue: 0,0:04:27.14,0:04:31.37,Chinese,,0,0,0,,然后生成了一个WAV文件，忽略解码错误，并启动了1200波特模式
Dialogue: 0,0:04:27.14,0:04:31.37,Comments,,0,0,0,,注：波特是调制速率单位，暂且认为 1baud=1bps
Dialogue: 0,0:04:31.37,0:04:36.24,Chinese,,0,0,0,,一般KCS标准的解码速度是300波特，也就是300bit每秒
Dialogue: 0,0:04:36.24,0:04:42.88,Chinese,,0,0,0,,但要这样的话，录音时长就得长4倍了，还是算了吧
Dialogue: 0,0:04:42.88,0:04:49.85,Chinese,,0,0,0,,好了，我们生成了一个11秒长的音频，里面存着数据，听起来像这样
Dialogue: 0,0:04:53.37,0:04:55.68,Chinese,,0,0,0,,有点像当时的拨号上网
Dialogue: 0,0:04:55.68,0:05:02.64,Chinese,,0,0,0,,每一位数据都以声频移频键控方式存储，缩写为AFSK
Dialogue: 0,0:04:55.68,0:05:02.64,Comments,,0,0,0,,注：以数字信号控制载波频率变化的调制方式，称为频移键控
Dialogue: 0,0:05:02.64,0:05:08.48,Chinese,,0,0,0,,基本上每一位数据都转换成了很短的的正弦波，变化频率很快
Dialogue: 0,0:05:08.48,0:05:14.40,Chinese,,0,0,0,,现在我们可以播放并录制到磁带上了，这里我用Cool Edit 96
Dialogue: 0,0:05:08.48,0:05:14.40,Comments,,0,0,0,,SuperBart：Cool Edit 就是现在 Adobe Audition 的前身\N我在初中机房里见过，不过没有什么印象
Dialogue: 0,0:05:14.40,0:05:18.40,Chinese,,0,0,0,,因为我用这个软件有几十年了，功能对我而言够用了
Dialogue: 0,0:05:18.40,0:05:23.20,Chinese,,0,0,0,,在老DOS电脑上使用十分容易，而且还可以在更老的电脑上使用
Dialogue: 0,0:05:23.20,0:05:28.48,Chinese,,0,0,0,,但我已经有一台Windows 98了，所以就用更好的吧。电脑那边的
Dialogue: 0,0:05:28.48,0:05:33.28,Chinese,,0,0,0,,回放越响越好，而且磁带录音方面也不要破音
Dialogue: 0,0:05:34.00,0:05:37.84,Chinese,,0,0,0,,我也没用任何降噪处理，基本就是原样输出
Dialogue: 0,0:05:38.64,0:05:42.59,Chinese,,0,0,0,,再三检查音量后，该录些数据了:-)
Dialogue: 0,0:05:47.92,0:05:54.08,Chinese,,0,0,0,,好极了，我在磁带上已经录上了数据，将其录回电脑和
Dialogue: 0,0:05:54.08,0:06:01.92,Chinese,,0,0,0,,重新录音没什么两样，都是KCS标准的8位22kHz单声道音频文件
Dialogue: 0,0:06:01.92,0:06:07.52,Chinese,,0,0,0,,这个版本的Cool Edit在录音的时候不会显示波形图
Dialogue: 0,0:06:07.52,0:06:14.00,Chinese,,0,0,0,,但没什么问题，我们把录进去的东西又录了回来，把开头
Dialogue: 0,0:06:14.00,0:06:20.64,Chinese,,0,0,0,,结尾的空白位置去掉，再用KCS处理一下就行了，这样我就
Dialogue: 0,0:06:20.64,0:06:27.20,Chinese,,0,0,0,,解码出文本文件了，命令基本一致，但是wav和txt换了一下位置
Dialogue: 0,0:06:27.20,0:06:34.08,Chinese,,0,0,0,,没有解码错误，看上去应该行。现在再看看这个文本文件
Dialogue: 0,0:06:34.08,0:06:40.72,Chinese,,0,0,0,,DOS下保存，录到磁带中，再录制回来，又加载回DOS了！
Dialogue: 0,0:06:40.72,0:06:45.36,Chinese,,0,0,0,,唯一不同之处在于文本开头的方块，一开始是没有的
Dialogue: 0,0:06:45.36,0:06:48.80,Chinese,,0,0,0,,我回去重新去掉了空白位置，调整一下音量，看看有什么不同
Dialogue: 0,0:06:48.80,0:06:53.92,Chinese,,0,0,0,,但是并没有，在文本开头仍然看到了方块。我也搞不清
Dialogue: 0,0:06:53.92,0:06:59.12,Chinese,,0,0,0,,到底是啥情况，或是对存取数据来说有什么意义。不过只有实践出真知
Dialogue: 0,0:06:59.12,0:07:05.76,Chinese,,0,0,0,,那咱就从头再来，磁带倒回一个好位置，再将游戏录到磁带上:-)
Dialogue: 0,0:07:15.70,0:07:21.92,Chinese,,0,0,0,,我一开始想把DOOM录到磁带上，从开盘带上加载
Dialogue: 0,0:07:21.92,0:07:28.88,Chinese,,0,0,0,,DOOM一定很酷的。可惜，将DOOM用KCS编码后，音频太长了
Dialogue: 0,0:07:28.88,0:07:35.76,Chinese,,0,0,0,,5小时24分的音频文件，就是用较快的1200波特编码，那也是200MB啊
Dialogue: 0,0:07:35.76,0:07:41.04,Chinese,,0,0,0,,这还是试玩版DOOM，不是完整版，所以就算了吧:-(
Dialogue: 0,0:07:41.68,0:07:47.44,Chinese,,0,0,0,,而且就算我们不以15英寸每秒，而是3.75英寸每秒的速度走带
Dialogue: 0,0:07:47.44,0:07:55.20,Chinese,,0,0,0,,每面磁带也只有133分钟的录音时长，所以，我们得找个大小
Dialogue: 0,0:07:55.20,0:08:00.96,Chinese,,0,0,0,,小得多的游戏。鉴于我不想整周都在搞这个
Dialogue: 0,0:08:00.96,0:08:07.84,Chinese,,0,0,0,,我直接用这个游戏了。首先，游戏大小仅52.4KB
Dialogue: 0,0:08:07.84,0:08:11.92,Chinese,,0,0,0,,其次，整个游戏只有一个可执行文件。我可不想录制多个文件
Dialogue: 0,0:08:11.92,0:08:17.44,Chinese,,0,0,0,,或是压缩好再录。当然，过程一切顺利，使用原先的KCS设定
Dialogue: 0,0:08:17.44,0:08:25.60,Chinese,,0,0,0,,的话，整个52KB的游戏就被编码成8分12秒的波形文件了
Dialogue: 0,0:08:25.60,0:08:32.79,Chinese,,0,0,0,,没办法，1200bps的速度编码53,707字节，真的没办法:-(
Dialogue: 0,0:08:32.79,0:08:38.07,Chinese,,0,0,0,,为了方便，我写了一个脚本，以让在资源浏览器下
Dialogue: 0,0:08:38.08,0:08:43.67,Chinese,,0,0,0,,编解码文件能一键完成。现在的步骤和一开始差不多，只不过每一步
Dialogue: 0,0:08:43.67,0:08:49.12,Chinese,,0,0,0,,都要比之前还要长8分钟啊！当然，我不知道最后会如何，因为
Dialogue: 0,0:08:49.12,0:08:54.80,Chinese,,0,0,0,,这么长时间内不管是在电脑端，还是在录音端，绝对会产生错误
Dialogue: 0,0:08:54.80,0:09:00.32,Chinese,,0,0,0,,毕竟家用电脑和这张声卡可不是无底噪的啊
Dialogue: 0,0:09:00.32,0:09:06.16,Chinese,,0,0,0,,还有这台开盘机，虽然品相不错，但这可是46年前生产的啊
Dialogue: 0,0:09:06.72,0:09:12.80,Chinese,,0,0,0,,话虽这么说，录音过程很顺利，剩下的事就是倒完带
Dialogue: 0,0:09:12.80,0:09:19.44,Chinese,,0,0,0,,录回电脑了，然后看看情况如何吧。我在播放前将输入端的
Dialogue: 0,0:09:19.44,0:09:24.64,Chinese,,0,0,0,,音量开到最大，最终的音频文件很响亮，和原先的音频文件
Dialogue: 0,0:09:24.64,0:09:30.64,Chinese,,0,0,0,,基本一样。之后的编码过程仅需几秒，现在该验收了:-)
Dialogue: 0,0:09:30.64,0:09:39.84,Chinese,,0,0,0,,成功解码53,708比特，有1次编码出错。原先文件大小是53707
Dialogue: 0,0:09:39.84,0:09:46.00,Chinese,,0,0,0,,所以中间一定是多解码了一位。无论如何，赶紧运行一下
Dialogue: 0,0:09:47.54,0:09:49.13,Chinese,,0,0,0,,╰(*°▽°*)╯
Dialogue: 0,0:09:49.74,0:09:53.28,Chinese,,0,0,0,,天哪，就算某处多出了一位，它还能运行啊！
Dialogue: 0,0:09:53.28,0:09:56.55,Chinese,,0,0,0,,看上去游戏运行基本正常诶
Dialogue: 0,0:09:56.55,0:10:01.52,Chinese,,0,0,0,,我觉得和一开始测试的的文本一样，某处又出现了
Dialogue: 0,0:10:01.52,0:10:06.08,Chinese,,0,0,0,,一些奇怪的数据。而且这也肯定不是什么好事吧
Dialogue: 0,0:10:06.08,0:10:11.44,Chinese,,0,0,0,,不过这个游戏没有受到影响，一切都是本应该的样子
Dialogue: 0,0:10:11.44,0:10:19.04,Chinese,,0,0,0,,天哪，我真的把游戏录到开盘带上了，真是好神奇哦
Dialogue: 0,0:10:20.40,0:10:27.44,Chinese,,0,0,0,,当然，按照15英寸每秒的走带速度的话，一面只能存储230KB的数据
Dialogue: 0,0:10:27.44,0:10:34.24,Chinese,,0,0,0,,当然，你也可以通过减慢走带速度，或是使用长些的磁带来
Dialogue: 0,0:10:34.24,0:10:40.48,Chinese,,0,0,0,,存储更多数据，不过受累不讨好，加载时间长，出错概率大
Dialogue: 0,0:10:41.04,0:10:46.00,Chinese,,0,0,0,,你也可以用某些终端软件来直接加载数据
Dialogue: 0,0:10:46.00,0:10:50.48,Chinese,,0,0,0,,而不是使用KCSO8编码后录过去再录回来。你在现代电脑上
Dialogue: 0,0:10:50.48,0:10:55.76,Chinese,,0,0,0,,也可以这么做，就是将数据通过音频线传输罢了
Dialogue: 0,0:10:55.76,0:11:01.76,Chinese,,0,0,0,,所以说，你有能力，你就放开做吧:-)
Dialogue: 0,0:11:01.76,0:11:07.52,Chinese,,0,0,0,,不过这就开始有点实用性了，差不多可以日常使用了
Dialogue: 0,0:11:07.52,0:11:13.04,Chinese,,0,0,0,,不过说真的，这个视频并不是给大家介绍任何有实际意义的东西
Dialogue: 0,0:11:13.04,0:11:18.72,Chinese,,0,0,0,,我就是图个开心罢了。但你可以用过时的数据存储标准和
Dialogue: 0,0:11:18.72,0:11:25.20,Chinese,,0,0,0,,差不多一样旧的磁带录音机来存储数据啊。我又不是为了
Dialogue: 0,0:11:25.20,0:11:30.40,Chinese,,0,0,0,,录制游戏磁带而买的开盘机啊。开盘机在以前是用来
Dialogue: 0,0:11:30.40,0:11:35.60,Chinese,,0,0,0,,播放很长的高品质音乐，或是多轨混音啥的
Dialogue: 0,0:11:35.60,0:11:40.00,Chinese,,0,0,0,,所以我还是将其放回我的音响系统吧:-P不过希望大家
Dialogue: 0,0:11:40.00,0:11:45.44,Chinese,,0,0,0,,喜欢看这些老掉牙的技术，如果你也有磁带机的话，你也可以试试
Dialogue: 0,0:11:45.44,0:11:50.08,Chinese,,0,0,0,,当然，开盘机也行啦。现在呢，我还是播放
Dialogue: 0,0:11:50.08,0:11:55.84,Chinese,,0,0,0,,录制到开盘磁带上的canyon.mid来结束本期视频吧
Dialogue: 0,0:11:57.84,0:13:56.25,Chinese,,0,0,0,,{\pos(541.333,966)}翻译：SuperBart@Bilibili\N校对：Citrusnyade@Bilibili \N原作者LGR发布于2021年3月12日\N翻译仓促，请多谅解，请多多请教
Dialogue: 0,0:14:00.85,0:14:03.55,Chinese,,0,0,0,,{\pos(973.333,678)}感谢收看！
